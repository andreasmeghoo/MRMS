@page
@using MRMS.Enums;
@using System.ComponentModel.DataAnnotations;
@using MRMS.Models;
@using Microsoft.AspNetCore.Identity;
@inject UserManager<User> _userManager;
@model MRMS.Pages.Appointments.IndexModel

@{
    ViewData["Title"] = "Appointments";
}

<h1>@ViewData["Title"]</h1>
@if (User.IsInRole("patient"))
{
    <p>
        <a asp-page="Create">Request Appointment</a>
    </p>
    <div class="d-flex p-2 bd-highlight">
       
        @foreach (var item in Model.Appointment)
        {
            @if (item.PatientId == Model.UserId)
            {
                <div class="card m-3 text-white bg-primary" style="width: 20rem;">
                    <div class="card-body">
                        <h5 class="card-title">@Html.DisplayFor(modelItem => item.Reason)</h5>
                        <p class="card-text">
                            @{
                                User preferredDoctor = Model.Doctors.FirstOrDefault(d => d.Id == item.PreferredDoctorId);
                            <span><b>Preferred Doctor:</b> @preferredDoctor.FirstName @preferredDoctor.LastName</span><br />
                            }
                            <b>Start Time:</b> @Html.DisplayFor(modelItem => item.StartTime)<br />
                            <b>End Time:</b> @Html.DisplayFor(modelItem => item.EndTime)<br />
                            @if (item.SpecialAccomodations != null)
                            {
                                <span><b>Special Accomodations:</b> @Html.DisplayFor(modelItem => item.SpecialAccomodations)</span>
                            }
                        </p>
                    </div>
                    <div class="card-footer bg-success">
                        <div class="row">
                        <div class="col">
                        @if(item.Confirmed)
                        {
                            <p>Appointment Confirmed</p>
                        }
                        </div>
                        <div class="col-auto">
                        <a asp-page="./Delete" class="btn btn-danger" asp-route-id="@item.AppointmentId">Cancel</a>
                        </div>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
}
else
{
    <p>
        <a asp-page="Create">New Appointment</a>
    </p>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Appointment[0].PreferredDoctorId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Appointment[0].PatientId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Appointment[0].Reason)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Appointment[0].StartTime)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Appointment[0].EndTime)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Appointment[0].SpecialAccomodations)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Appointment)
            {
                <tr>
                        @{
                            User doctor = Model.Doctors.FirstOrDefault(d => d.Id == item.PreferredDoctorId);
                            <td>
                                @doctor.FirstName @doctor.LastName
                            </td>
                            User patient = Model.Patients.FirstOrDefault(p => p.Id == item.PatientId);
                            <td>
                                @patient.FirstName @patient.LastName
                            </td>
                        }
                    <td>
                        @Html.DisplayFor(modelItem => item.Reason)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StartTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EndTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SpecialAccomodations)
                    </td>
                    <td>
                        <a asp-page="./Edit" asp-route-id="@item.AppointmentId">Edit</a> |

                        <a asp-page="./Delete" asp-route-id="@item.AppointmentId">Delete</a> <br>
                        <div class="btn-group">
                            <button type="button" class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                @{
                                    var currentStatusName = ((DisplayStatusAttribute)typeof(AppointmentStatus)
                                    .GetMember(item.Status.ToString())[0]
                                    .GetCustomAttributes(typeof(DisplayStatusAttribute), false)[0])
                                    .Name;
                                }
                                @currentStatusName
                            </button>
                            <ul class="dropdown-menu">
                                @foreach (var appointmentStatus in AppointmentStatus.GetValues(typeof(AppointmentStatus)))
                                {
                                    var optionName = ((DisplayActionAttribute)typeof(AppointmentStatus)
                                    .GetMember(appointmentStatus.ToString())[0]
                                    .GetCustomAttributes(typeof(DisplayActionAttribute), false)[0])
                                    .Name;

                                    var user = await _userManager.GetUserAsync(User);
                                    var roles = await _userManager.GetRolesAsync(user);
                                    var roleAccessAttributes = (RoleAccessAttribute[])typeof(AppointmentStatus)
                                    .GetMember(appointmentStatus.ToString())[0]
                                    .GetCustomAttributes(typeof(RoleAccessAttribute), false);

                                    foreach (var roleAccessAttribute in roleAccessAttributes)
                                    {
                                        if (roles.Contains(roleAccessAttribute.Role))
                                        {
                                            <li>
                                                <form asp-page-handler="updateStatus" method="post">
                                                    <input type="hidden" name="id" value="@item.AppointmentId" />
                                                    <input type="hidden" name="newStatus" value="@appointmentStatus" />
                                                    <button type="submit" class="dropdown-item">@optionName</button>
                                                </form>
                                            </li>
                                        }
                                    }
                                }
                            </ul>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}